%El juego de la vida
%Sergio Garcia del Olmo 
%Grupo B

function juegodelavida(m,n,TableroSiguiente,TableroInicio,IntVec1,IntVec2,IntVec3,IntVec4,plothandle)

%Crea el tablero donde se encontraran las celulas
   axes( ...
      'Units','normalized', ...
      'Position',[0.05 0.05 0.90 0.90], ...
      'Visible','off', ...
      'SortMethod','childorder', ...
      'NextPlot','add');
 
   axis([-1 1 -1 1]);

m = 100; %Tamaño del mundo
TableroSiguiente = sparse(m,m); %Celulas vivas
n=1000; %iteraciones

%Reglas
%Crea grupos de celulas vivas
p = -1:1;
   for TableroInicio= 1:15
      kx = floor(rand*(m-4))+2;
      ky = floor(rand*(m-4))+2;
      TableroSiguiente(kx+p,ky+p) = (rand(3)>0.5);
   end
 
%dibujaCelula
%Busca las coordenadas de celulas vivas y las da color
[i,j] = find(TableroSiguiente);
   figure(gcf);
   plothandle = plot(i,j,'.','Color','black','MarkerSize',12);
   axis([0 m+1 0 m+1]);

%Intervalos vecinos a una celula
IntVec1 = [m 1:m-1];
IntVec2 = [2:m 1];
IntVec3 = [2:m 1];
IntVec4 = [m 1:m-1];

function [TableroSiguiente,n_vivas] = Evolucion( IntVec1,IntVec2,IntVec3,IntVec4,TableroSiguiente,plothandle,n );

    while n>0
        
        n=n-1;
        %Cuantos vecinos hay vivos
        n_vivas=TableroSiguiente(IntVec1,:) + TableroSiguiente(IntVec3,:) + TableroSiguiente(:,IntVec2) + TableroSiguiente(:,IntVec4) + TableroSiguiente(IntVec1,IntVec2) + TableroSiguiente(IntVec1,IntVec4) + TableroSiguiente(IntVec3,IntVec2) + TableroSiguiente(IntVec3,IntVec4);

        %Una celula viva con 2 celulas vecinas, o culaquier celula con 3 celulas
        %vecinas esta viva en el siguiente paso
        TableroSiguiente = (TableroSiguiente & (n_vivas == 2)) | (n_vivas == 3);

        %Actualiza el tablero
        [i,j] = find(TableroSiguiente);
            set(plothandle,'xdata',i,'ydata',j)
            drawnow
    end


end